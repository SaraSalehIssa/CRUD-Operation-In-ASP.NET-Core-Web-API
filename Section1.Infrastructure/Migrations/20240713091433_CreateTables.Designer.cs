// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Section1.Infrastructure.Data;

#nullable disable

namespace Section1.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240713091433_CreateTables")]
    partial class CreateTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Section1.Core.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Devices and gadgets",
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Books and literature",
                            Name = "Books"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Apparel and accessories",
                            Name = "Clothing"
                        });
                });

            modelBuilder.Entity("Section1.Core.Entities.LocalUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LocalUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Ahmed Haggag",
                            Password = "password123",
                            Role = "Admin",
                            Username = "Haggag281"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Tarek Sharim",
                            Password = "password456",
                            Role = "User",
                            Username = "Tarek777"
                        });
                });

            modelBuilder.Entity("Section1.Core.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("LocalUserId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LocalUserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2023, 12, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocalUserId = 1,
                            Status = "Pending"
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocalUserId = 2,
                            Status = "Completed"
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2023, 12, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocalUserId = 1,
                            Status = "Shipped"
                        });
                });

            modelBuilder.Entity("Section1.Core.Entities.OrderDetails", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id", "ProductId", "OrderId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProductId = 1,
                            OrderId = 1,
                            Price = 299.99m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 2,
                            ProductId = 4,
                            OrderId = 1,
                            Price = 9.99m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 3,
                            ProductId = 3,
                            OrderId = 2,
                            Price = 19.99m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 4,
                            ProductId = 2,
                            OrderId = 3,
                            Price = 799.99m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 5,
                            ProductId = 5,
                            OrderId = 3,
                            Price = 9.99m,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("Section1.Core.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Image = "smartphone.jpg",
                            Name = "Smartphone",
                            Price = 299.99m
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Image = "laptop.jpg",
                            Name = "Laptop",
                            Price = 799.99m
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Image = "novel.jpg",
                            Name = "Novel",
                            Price = 19.99m
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 3,
                            Image = "tshirt.jpg",
                            Name = "T-Shirt",
                            Price = 9.99m
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            Image = "jeans.jpg",
                            Name = "Jeans",
                            Price = 49.99m
                        });
                });

            modelBuilder.Entity("Section1.Core.Entities.Order", b =>
                {
                    b.HasOne("Section1.Core.Entities.LocalUser", "LocalUser")
                        .WithMany("Orders")
                        .HasForeignKey("LocalUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LocalUser");
                });

            modelBuilder.Entity("Section1.Core.Entities.OrderDetails", b =>
                {
                    b.HasOne("Section1.Core.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Section1.Core.Entities.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Section1.Core.Entities.Product", b =>
                {
                    b.HasOne("Section1.Core.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Section1.Core.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Section1.Core.Entities.LocalUser", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Section1.Core.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Section1.Core.Entities.Product", b =>
                {
                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
